package com.dao;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.*;

import com.model.Employee;

public class EmployeeDAO {
	
	private String url="jdbc:mysql://localhost:3306/demo";
    private String Username="root";
    private String Password="1326";
    
    private static final String INSERT_EMPLOYEE_SQL="Insert into employee"+"(First_Name,Last_Name,Designation,DOB,Email,Mobile_No) values"+"(?,?,?,?,?,?);";
    
    private static final String SELECT_EMPLOYEE_BY_ID ="select Employee_No,First_Name,Last_Name,Designation,DOB,Email,Mobile_No from employee where Employee_No=?;";
    private static final String SELECT_ALL_EMPLOYEE="select * from employee";
    private static final String DELETE_EMPLOYEE_SQL="delete from employee where Employee_No=?;";
    private static final String UPDATE_EMPLOYEE_SQL="update employee set First_Name=?,Last_Name=?,Designation=?,DOB=?,Email=?,Mobile_No=? where Employee_No=?;";
    
    public EmployeeDAO() {}
    
   protected Connection getConnection(){
        Connection connection = null;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
				connection = DriverManager.getConnection(url, Username, Password);
			} catch (SQLException e) {
				e.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
        return connection; 
    }

    
    public void insertEmployee(Employee employee) {
    	System.out.println(INSERT_EMPLOYEE_SQL);
    	try(Connection connection = getConnection();
    	    PreparedStatement preparedStatement=connection.prepareStatement(INSERT_EMPLOYEE_SQL)){
    		preparedStatement.setString(1,employee.getFirst_Name());
    		preparedStatement.setString(2,employee.getLast_Name());
    		preparedStatement.setString(3,employee.getDesignation());
    		preparedStatement.setString(4,employee.getDOB());
    		preparedStatement.setString(5,employee.getEmail());
    		preparedStatement.setString(6,employee.getMobile_No());
    		System.out.println(preparedStatement);
    		preparedStatement.executeUpdate();
    	}catch(SQLException e) {
    		printSQLException(e);
    	}
    }
    
    public Employee selectEmployee(int Employee_No) {
    	Employee employee=null;
    	try(Connection connection =getConnection();
    			PreparedStatement preparedStatement=connection.prepareStatement(SELECT_EMPLOYEE_BY_ID)){
    		preparedStatement.setInt(1, Employee_No);
    		System.out.println(preparedStatement);
    		ResultSet rs=preparedStatement.executeQuery();
    		
    		while(rs.next()) {
    			String First_Name=rs.getString("First_Name");
    			String Last_Name=rs.getString("Last_Name");
    			String Designation=rs.getString("Designation");
    			String DOB=rs.getString("DOB");
    			String Email=rs.getString("Email");
    			String Mobile_No=rs.getString("Mobile_No");
    			employee=new Employee(Employee_No,First_Name,Last_Name,Designation,DOB,Email,Mobile_No);
    			
    		}
    	}catch(SQLException e) {
    		printSQLException(e);
		}
    	return employee;
        }
    
    
    public List<Employee> selectAllEmployee() throws ClassNotFoundException{
    	List <Employee>employees=new ArrayList<>();
    	try {
    			Class.forName("com.mysql.cj.jdbc.Driver");
				Connection connection = DriverManager.getConnection(url, Username, Password);
    		PreparedStatement preparedStatement=connection.prepareStatement(SELECT_ALL_EMPLOYEE);
    		System.out.println(preparedStatement);
    		ResultSet rs=preparedStatement.executeQuery();
    		
    		while(rs.next()) {
    			int Employee_No=rs.getInt("Employee_No");
    			String First_Name=rs.getString("First_Name");
    			String Last_Name=rs.getString("Last_Name");
    			String Designation=rs.getString("Designation");
    			String DOB=rs.getString("DOB");
    			String Email=rs.getString("Email");
    			String Mobile_No=rs.getString("Mobile_No");
    			employees.add(new Employee(Employee_No,First_Name,Last_Name,Designation,DOB,Email,Mobile_No));
    		}
    	}catch(SQLException e) {
    		e.getMessage();
    	}
    	return employees;
    }
    public boolean deleteUser(int Employee_No) throws SQLException {
    	boolean rowDeleted;
    	try(Connection connection =getConnection();PreparedStatement statement=connection.prepareStatement(DELETE_EMPLOYEE_SQL)){
    		statement.setInt(1, Employee_No);
    		rowDeleted=statement.executeUpdate()>0;
    	}
    	return rowDeleted;
    }
    
    public boolean updateEmployee(Employee employee) throws SQLException  {
    	boolean rowUpdated;
    	try(Connection connection =getConnection();
    			PreparedStatement statement=connection.prepareStatement(UPDATE_EMPLOYEE_SQL)){
    		statement.setString(1,employee.getFirst_Name());
    		statement.setString(2,employee.getLast_Name());
    		statement.setString(3,employee.getDesignation());
    		statement.setString(4,employee.getDOB());
    		statement.setString(5,employee.getEmail());
    		statement.setString(6,employee.getMobile_No());
    		statement.setInt(7,employee.getEmployee_No());
    		
    		rowUpdated=statement.executeUpdate()>0;
    	}
    	return rowUpdated;
    }
    
    private void printSQLException(SQLException ex) {
    	for(Throwable e:ex) {
    		if(e instanceof SQLException) {
    			e.printStackTrace(System.err);
    			System.err.println("SQLState: "+((SQLException)e).getSQLState());
    			System.err.println("Error Code: "+((SQLException)e).getErrorCode());
    			System.err.println("Message: "+e.getMessage());
    			Throwable t=ex.getCause();
    			while(t!=null) {
    				System.out.println("Cause: "+t);
    				t=t.getCause();
    			}


    		}
    	}
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
}

